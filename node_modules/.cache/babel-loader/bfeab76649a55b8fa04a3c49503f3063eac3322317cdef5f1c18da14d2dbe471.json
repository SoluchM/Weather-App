{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDIA\\\\2_SEMESTR\\\\React\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Clear from \"./image/Clear.jpg\";\nimport Clouds from \"./image/Clouds.jpg\";\nimport Drizzle from \"./image/Drizzle.jpg\";\nimport Mist from \"./image/Mist.jpg\";\nimport Rain from \"./image/Rain.jpg\";\nimport Polana from \"./image/polana.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"3b5cff616604c3fac74ed40311ad2ce2\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [data, setData] = useState({});\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setData(result);\n        setQuery('');\n        console.log(data.weather);\n      });\n    }\n  };\n  const dateBuilder = d => {\n    let months = [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"];\n    let days = [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n  let backgroundImage = '';\n  if (typeof data.weather !== \"undefined\") {\n    switch (data.weather[0].main) {\n      case \"Clear\":\n        backgroundImage = Clear;\n        break;\n      case \"Clouds\":\n        backgroundImage = Clouds;\n        break;\n      case \"Drizzle\":\n        backgroundImage = Drizzle;\n        break;\n      case \"Mist\":\n        backgroundImage = Mist;\n        break;\n      case \"Rain\":\n        backgroundImage = Rain;\n        break;\n      default:\n        backgroundImage = '';\n    }\n  }\n  const weatherTranslations = {\n    Clear: \"Czyste niebo\",\n    Clouds: \"Zachmurzenie\",\n    Drizzle: \"Mżawka\",\n    Mist: \"Mgła\",\n    Rain: \"Deszcz\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    style: {\n      backgroundImage: `url('${backgroundImage}')`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"bottom\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Wpisz miasto\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), typeof data.main !== \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [data.name, \", \", data.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tekst\",\n              children: \"Temperatura\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [Math.round(data.main.temp), \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tekst\",\n              children: \"Temperatura maks.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"makstemp\",\n              children: [Math.round(data.main.temp_max), \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 77\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tekst\",\n              children: \"Wiatr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wind\",\n              children: [data.wind.speed, \"m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weatherTranslations[data.weather[0].main]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kwGbNUutCD74m+neR6jukYckCTs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Clear","Clouds","Drizzle","Mist","Rain","Polana","jsxDEV","_jsxDEV","api","key","base","App","_s","query","setQuery","data","setData","search","evt","fetch","then","res","json","result","console","log","weather","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","backgroundImage","main","weatherTranslations","className","style","backgroundSize","backgroundPosition","children","type","placeholder","onChange","e","target","value","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","name","sys","country","Date","Math","round","temp","temp_max","wind","speed","_c","$RefreshReg$"],"sources":["D:/STUDIA/2_SEMESTR/React/weather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Clear from \"./image/Clear.jpg\";\nimport Clouds from \"./image/Clouds.jpg\";\nimport Drizzle from \"./image/Drizzle.jpg\";\nimport Mist from \"./image/Mist.jpg\";\nimport Rain from \"./image/Rain.jpg\";\nimport Polana from \"./image/polana.jpg\";\n\nconst api = {\n  key: \"3b5cff616604c3fac74ed40311ad2ce2\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [data, setData] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setData(result);\n          setQuery('');\n          console.log(data.weather);\n        });\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"];\n    let days = [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  let backgroundImage = '';\n\n  if (typeof data.weather !== \"undefined\") {\n    switch (data.weather[0].main) {\n      case \"Clear\":\n        backgroundImage = Clear;\n        break;\n      case \"Clouds\":\n        backgroundImage = Clouds;\n        break;\n      case \"Drizzle\":\n        backgroundImage = Drizzle;\n        break;\n      case \"Mist\":\n        backgroundImage = Mist;\n        break;\n      case \"Rain\":\n        backgroundImage = Rain;\n        break;\n      default:\n        backgroundImage = '';\n    }\n  }\n\n  const weatherTranslations = {\n    Clear: \"Czyste niebo\",\n    Clouds: \"Zachmurzenie\",\n    Drizzle: \"Mżawka\",\n    Mist: \"Mgła\",\n    Rain: \"Deszcz\"\n  };\n\n  return (\n    <div className=\"app\" style={{ backgroundImage: `url('${backgroundImage}')`, backgroundSize: \"cover\", backgroundPosition: \"bottom\" }}>\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Wpisz miasto\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {typeof data.main !== \"undefined\" ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{data.name}, {data.sys.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"info\">\n                <div className='tekst'>Temperatura</div>\n                <div className='temp'>{Math.round(data.main.temp)}°C<br></br></div>\n                <div className='tekst'>Temperatura maks.</div>\n                <div className='makstemp'>{Math.round(data.main.temp_max)}°C<br></br></div>\n                <div className='tekst'>Wiatr</div>\n                <div className='wind'>{data.wind.speed}m/s</div>\n              </div>\n              <div className=\"weather\">{weatherTranslations[data.weather[0].main]}</div>\n            </div>\n          </div>\n        ) : ''}\n      </main>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}