{"ast":null,"code":"var _jsxFileName = \"D:\\\\STUDIA\\\\2_SEMESTR\\\\React\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"3b5cff616604c3fac74ed40311ad2ce2\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => setWeather(result));\n    }\n  };\n  const dateBuilder = d => {\n    let months = [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"];\n    let days = [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Wpisz miasto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: dateBuilder(new Date())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp\",\n          children: \"15C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather\",\n          children: \"S\\u0142onecznie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WfIlIcXSxCUve4W/aFy4QSWUDkM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","api","key","base","App","_s","query","setQuery","useState","weather","setWeather","search","evt","fetch","then","res","json","result","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","Date","_c","$RefreshReg$"],"sources":["D:/STUDIA/2_SEMESTR/React/weather-app/src/App.js"],"sourcesContent":["import React from 'react';\nconst api = {\n  key: \"3b5cff616604c3fac74ed40311ad2ce2\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App(){\n  const[query, setQuery] = useState('');\n  const[weather, setWeather] = useState({});\n\n  const search = evt =>{\n    if(evt.key === \"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => setWeather(result));\n    }\n  }\n\n  const dateBuilder = (d) =>{\n    let months = [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"];\n    let days = [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"];\n    \n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  return(\n    <div className=\"app\">\n      <main>\n        <div className=\"search-box\">\n          <input type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"Wpisz miasto\"/>\n        </div>\n          <div className=\"location-box\">\n            <div className=\"location\"></div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              15C\n            </div>\n            <div className=\"weather\">Słonecznie</div>\n          </div>\n      </main>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}